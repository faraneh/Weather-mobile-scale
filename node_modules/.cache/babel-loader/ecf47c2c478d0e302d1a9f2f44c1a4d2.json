{"ast":null,"code":"var _jsxFileName = \"/Users/farane/weather-template/src/components/chart/chart.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst chart = props => {\n  var data = [{\n    y: '2014',\n    a: 50,\n    b: 90\n  }, {\n    y: '2015',\n    a: 65,\n    b: 75\n  }, {\n    y: '2016',\n    a: 50,\n    b: 50\n  }, {\n    y: '2017',\n    a: 75,\n    b: 60\n  }, {\n    y: '2018',\n    a: 80,\n    b: 65\n  }, {\n    y: '2019',\n    a: 90,\n    b: 70\n  }, {\n    y: '2020',\n    a: 100,\n    b: 75\n  }, {\n    y: '2021',\n    a: 115,\n    b: 75\n  }, {\n    y: '2022',\n    a: 120,\n    b: 85\n  }, {\n    y: '2023',\n    a: 145,\n    b: 85\n  }, {\n    y: '2024',\n    a: 160,\n    b: 95\n  }],\n      config = {\n    data: data,\n    xkey: 'y',\n    ykeys: ['a', 'b'],\n    labels: ['Total Income', 'Total Outcome'],\n    fillOpacity: 0.6,\n    hideHover: 'auto',\n    behaveLikeLine: true,\n    resize: true,\n    pointFillColors: ['#ffffff'],\n    pointStrokeColors: ['black'],\n    lineColors: ['gray', 'red']\n  };\n  config.element = 'area-chart';\n  Morris.Area(config);\n\n  data: [{\n    label: \"Friends\",\n    value: 30\n  }, {\n    label: \"Allies\",\n    value: 15\n  }, {\n    label: \"Enemies\",\n    value: 45\n  }, {\n    label: \"Neutral\",\n    value: 10\n  }];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: Morris.Area(config)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\nexport default chart;","map":{"version":3,"sources":["/Users/farane/weather-template/src/components/chart/chart.jsx"],"names":["React","chart","props","data","y","a","b","config","xkey","ykeys","labels","fillOpacity","hideHover","behaveLikeLine","resize","pointFillColors","pointStrokeColors","lineColors","element","Morris","Area","label","value"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst chart = (props) => {\n\n\n    var data = [\n        { y: '2014', a: 50, b: 90},\n        { y: '2015', a: 65,  b: 75},\n        { y: '2016', a: 50,  b: 50},\n        { y: '2017', a: 75,  b: 60},\n        { y: '2018', a: 80,  b: 65},\n        { y: '2019', a: 90,  b: 70},\n        { y: '2020', a: 100, b: 75},\n        { y: '2021', a: 115, b: 75},\n        { y: '2022', a: 120, b: 85},\n        { y: '2023', a: 145, b: 85},\n        { y: '2024', a: 160, b: 95}\n      ],\n      config = {\n        data: data,\n        xkey: 'y',\n        ykeys: ['a', 'b'],\n        labels: ['Total Income', 'Total Outcome'],\n        fillOpacity: 0.6,\n        hideHover: 'auto',\n        behaveLikeLine: true,\n        resize: true,\n        pointFillColors:['#ffffff'],\n        pointStrokeColors: ['black'],\n        lineColors:['gray','red']\n    };\n    config.element = 'area-chart';\n    Morris.Area(config);\n    data: [\n      {label: \"Friends\", value: 30},\n      {label: \"Allies\", value: 15},\n      {label: \"Enemies\", value: 45},\n      {label: \"Neutral\", value: 10}\n    ]\n  ;\n     \n\n    return ( \n        <div className=\"chart\">\n            {Morris.Area(config)}\n\n        </div>\n     );\n}\n \nexport default chart;"]},"metadata":{},"sourceType":"module"}